---
- name: Install Docker and Docker Compose to HR App and Monitoring servers if not already installed
  hosts: all
  become: true

  tasks:
    - name: Install required packages
      yum:
        name: "{{ item }}"
        state: present
      loop:
        - git
        - python3-pip

    - name: Check if Docker is installed
      command: docker --version
      ignore_errors: true
      register: docker_installed

    - name: Install Docker if not installed
      yum:
        name: docker
        state: present
      when: docker_installed.rc != 0

    - name: Ensure the Docker group exists
      group:
        name: docker
        state: present

    - name: Add the user to the Docker group
      user:
        name: ec2-user
        groups: docker
        append: yes

    - name: Start and enable Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Check if Docker Compose is installed
      stat:
        path: /usr/local/bin/docker-compose
      register: compose_file_status

    - name: Install Docker Compose if not installed
      command: >
        curl -L "https://github.com/docker/compose/releases/download/v2.22.0/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
      become: true
      when: not compose_file_status.stat.exists

    - name: Make Docker Compose binary file executable
      file:
        path: /usr/local/bin/docker-compose
        mode: '+x'
      become: true
      when: compose_file_status.stat.exists


- name: Install and Configure App, Node Exporter and cAdvisor using Docker
  hosts: hrapp_ec2_instances
  become: true

  tasks:
    - name: Deploy HR App as a Docker Container
      docker_container:
        name: hrapp
        image: cobidennis/hrapp:release
        state: started
        restart_policy: always
        ports:
          - "80:5000"
        env:
          POSTGRES_HOST: "{{ postgres_host }}"
          POSTGRES_USER: "{{ postgres_user }}"
          POSTGRES_DATABASE_NAME: "{{ postgres_database_name }}"
          POSTGRES_PASSWORD: "{{ postgres_password }}"
          TO_ADDRESS: "{{ to_address }}"
          SOURCE_ADDRESS: "{{ source_address }}"
          AWS_REGION_NAME: "{{ aws_region_name }}"
          AWS_ACCESS_NAME: "{{ aws_access_name }}"
          AWS_KEY_NAME: "{{ aws_key_name }}"
      register: docker_run_hrapp_result

    - name: Display hrapp Container Result
      debug:
        var: docker_run_hrapp_result

    - name: Run Prometheus Node Exporter container from image
      docker_container:
        name: node-exporter
        image: prom/node-exporter:latest
        ports:
          - "9100:9100"
      become: true

    - name: Run cAdvisor container
      docker_container:
        name: cadvisor
        image: google/cadvisor:latest
        ports:
          - "8080:8080"
        volumes:
          - /:/rootfs:ro
          - /var/run:/var/run:rw
          - /sys:/sys:ro
          - /var/lib/docker/:/var/lib/docker:ro
      become: true



- name: Pull Prometheus Monitoring Repo into monitoring server and Run with Docker Compose
  hosts: hrapp_monitoring_ec2_instance
  become: true

  tasks:
    - name: Check if /workspace directory exists
      stat:
        path: /home/ec2-user/workspace
      register: workspace_stat

    - name: Create workspace directory if it doesn't exist
      file:
        path: /home/ec2-user/workspace
        state: directory
      when: not workspace_stat.stat.exists

    - name: Clone prometheus repository into workspace directory
      git:
        repo: https://github.com/cobidennis/prometheus.git
        dest: /home/ec2-user/workspace/prometheus
        version: dev
      become: true

    - name: Run Prometheus and co with Docker Compose in the workspace directory as daemon
      command: docker-compose -f /home/ec2-user/workspace/prometheus/docker-compose.yml up -d
      become: true
